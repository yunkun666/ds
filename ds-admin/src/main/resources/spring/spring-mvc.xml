<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" /> 
    <mvc:default-servlet-handler/>
    <context:annotation-config  /> 
    <aop:aspectj-autoproxy proxy-target-class="true" />  
    <mvc:resources mapping="/resource/**" location="/resource/" />
	<!-- 扫描器实现bean的自动载入 -->
	<context:component-scan base-package="cn.com" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"> 
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="false" /> 
		<property name="ignoreAcceptHeader" value="false" /> 
		<property name="mediaTypes" > 
			<value>
				atom=application/atom+xml
			 	html=text/html
				json=application/json
				*=*/*
			</value> 
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"  >
				
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
    <!-- 视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/jsp/" />
  		<property name="suffix" value=".jsp" />
  		<property name="cache" value="true" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
			<property name="ignoreAcceptHeader" value="true" />
			<property name="defaultContentType" value="text/html" />
			<property name="mediaTypes">
				<map>
					<entry key="atom" value="application/atom+xml" />
					<entry key="html" value="text/html" />
					<entry key="json" value="application/json" />
					<entry key="report" value="application/pdf" />
				</map>
			</property>
			<property name="favorParameter" value="false" />
			<property name="viewResolvers">
				<list>
					<ref bean="viewResolver" />
				</list>
			</property>
			<property name="defaultViews">
				<list>
					<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				</list>
			</property>
	</bean>
	
	<!-- 文件上传处理 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 解析request的编码 ，Default is ISO-8859-1 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 设置最大允许的大小(字节)。-1表示没有限制(默认) -->
		<property name="maxUploadSize" value="104857600" />
		<!--被允许的最大的内存的大小，Default is 10240 bytes -->
		<property name="maxInMemorySize" value="4096" />
		<!-- 一个类似懒加载的属性.可以定义该属性.让解析文件的时候再抛异常,然后Controller中定义异常处理的方法 -->
		<property name="resolveLazily" value="true" />
	</bean>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="cn.com.handle.AuthInterceptor">
				<property name="excludeUrls">
					<list>
						<value>system/verifyCodeImage.html</value>
						<value>admin/login.html</value>
						<value>admin/loginCheck.html</value>
						<value>admin/logout.html</value>
						<value>area/getdata.html</value>
						<value>file/uploads.html</value>
						<value>file/down.html</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>
